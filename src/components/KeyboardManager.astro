---
import "hotkeypad/reset.css";
import "hotkeypad/index.css";
import { type SocialIcon } from "@/types";
import type { CV } from "@/types";
import { getLangFromUrl, useTranslations } from "@/i18n/utils";

const cv = Astro.props.cv as CV;
const { basics } = cv;

const { profiles } = basics;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const SOCIAL_ICONS: SocialIcon = {
  GitHub: `<svg
  width="16"
  height="16"
  viewBox="0 0 24 24"
  xmlns="http://www.w3.org/2000/svg"
  style="margin-right: 8px"
  ><path
    fill="currentColor"
    d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
  ></path></svg
>`,
  LinkedIn: `<svg
    height="16"
    width="16"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    style="margin-right: 8px"
    ><title>LinkedIn</title><path
      fill="currentColor"
      d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
    ></path></svg
  >`,
  X: `<svg
    width="16"
    height="16"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
    style="margin-right: 8px"
    ><title>X</title><path
      fill="currentColor"
      d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"
    ></path></svg
  >
  `,
};

const profilesInfo = profiles.map(({ network, url }) => {
  const icon = SOCIAL_ICONS[network];
  const firstLetter = network[0].toUpperCase();

  return {
    id: network,
    section: "Social",
    title: t("keyboardmanager.visit").replace("{network}", network),
    url,
    icon,
    hotkey: `ctrl+${firstLetter}`,
  };
});

const translations = {
  "keyboardmanager.hotkey-label": t("keyboardmanager.hotkey-label")
    .replace("{cmd}", "<kbd>Ctrl</kbd>")
    .replace("{key}", "<kbd>K</kbd>"),
  "keyboardmanager.no-results": t("keyboardmanager.no-results"),
  "keyboardmanager.print": t("keyboardmanager.print"),
  "keyboardmanager.lightmode": t("keyboardmanager.lightmode"),
  "keyboardmanager.darkmode": t("keyboardmanager.darkmode"),
  "keyboardmanager.visit": t("keyboardmanager.visit"),
  "keyboardmanager.theme": t("keyboardmanager.theme"),
  "keyboardmanager.actions": t("keyboardmanager.actions"),
  "keyboardmanager.placeholder-search": t("keyboardmanager.placeholder-search"),
  "keyboardmanager.switch-language": t("keyboardmanager.switch-language"),
  "keyboardmanager.systemmode": t("keyboardmanager.systemmode"),
};
---

<footer
  id="normal-footer"
  class="no-print"
  set:html={translations["keyboardmanager.hotkey-label"]}
/>

<div id="footer-button" class="no-print">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="32"
    height="32"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="#777"
    fill="none"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path
      d="M7 9a2 2 0 1 1 2 -2v10a2 2 0 1 1 -2 -2h10a2 2 0 1 1 -2 2v-10a2 2 0 1 1 2 2h-10"
    ></path>
  </svg>
</div>

<div
  id="hotkeypad"
  data-placeholder={t("keyboardmanager.placeholder-search")}
  data-info={JSON.stringify(profilesInfo)}
  data-translations={JSON.stringify(translations)}
>
</div>

<script>
  interface Info {
    id: string;
    section: string;
    title: string;
    url: string;
    icon: string;
    hotkey: string;
    handler?: () => void;
  }

  import HotKeyPad from "hotkeypad";

  const hotkeypad = new HotKeyPad();
  const info = hotkeypad.instance.getAttribute("data-info") ?? "[]";
  const parsedInfo = JSON.parse(info) as Info[];

  const data = parsedInfo.map(({ url, hotkey, icon, id, section, title }) => {
    return {
      id,
      title,
      icon,
      hotkey,
      section,
      handler: () => {
        window.open(url, "_blank");
      },
    };
  });

  const translations =
    hotkeypad.instance.getAttribute("data-translations") ?? "[]";
  const parsedTranslations = JSON.parse(translations) as Record<string, string>;

  const currentLanguage = document.documentElement.lang;

  hotkeypad.setCommands([
    {
      id: "print",
      title: parsedTranslations["keyboardmanager.print"],
      icon: `<svg style="margin-right: 8px" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
  <path stroke-linecap="round" stroke-linejoin="round" d="M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0 1 10.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0 .229 2.523a1.125 1.125 0 0 1-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0 0 21 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 0 0-1.913-.247M6.34 18H5.25A2.25 2.25 0 0 1 3 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 0 1 1.913-.247m10.5 0a48.536 48.536 0 0 0-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5Zm-3 0h.008v.008H15V10.5Z" />
</svg>`,
      hotkey: "ctrl+P",
      section: parsedTranslations["keyboardmanager.actions"],
      handler: () => {
        window.print();
      },
    },
    {
      id: "print",
      title: parsedTranslations["keyboardmanager.switch-language"],
      icon: `<svg
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="m10.5 21 5.25-11.25L21 21m-9-3h7.5M3 5.621a48.474 48.474 0 0 1 6-.371m0 0c1.12 0 2.233.038 3.334.114M9 5.25V3m3.334 2.364C11.176 10.658 7.69 15.08 3 17.502m9.334-12.138c.896.061 1.785.147 2.666.257m-4.589 8.495a18.023 18.023 0 0 1-3.827-5.802"
        ></path>
      </svg>`,
      hotkey: "ctrl+I",
      section: parsedTranslations["keyboardmanager.actions"],
      handler: () => (location.href = currentLanguage === "es" ? "/en" : "/"),
    },
    {
      id: "lightmode",
      title: parsedTranslations["keyboardmanager.lightmode"],
      icon: `<svg
        style="margin-right: 8px"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="icon icon-tabler icons-tabler-outline icon-tabler-sun"
        ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
          d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"></path><path
          d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"
        ></path></svg
      >`,
      hotkey: "ctrl+C",
      section: parsedTranslations["keyboardmanager.theme"],
      handler: () =>
        document.documentElement.setAttribute("data-theme", "light"),
    },
    {
      id: "darkmode",
      title: parsedTranslations["keyboardmanager.darkmode"],
      icon: `<svg
        style="margin-right: 8px"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
          d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"
        ></path></svg
      >
      `,
      hotkey: "ctrl+V",
      section: parsedTranslations["keyboardmanager.theme"],
      handler: () =>
        document.documentElement.setAttribute("data-theme", "dark"),
    },
    {
      id: "systemmode",
      title: parsedTranslations["keyboardmanager.systemmode"],
      icon: `<svg
        style="margin-right: 8px"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
          d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"
        ></path><path d="M7 20h10"></path><path d="M9 16v4"></path><path d="M15 16v4"
        ></path></svg
      >`,
      hotkey: "ctrl+B",
      section: parsedTranslations["keyboardmanager.theme"],
      handler: () =>
        document.documentElement.setAttribute("data-theme", "system"),
    },
    ...data,
  ]);

  const footerButton = document.getElementById("footer-button");
  footerButton?.addEventListener("click", () => {
    var event = new KeyboardEvent("keydown", {
      key: "K",
      code: "KeyK",
      keyCode: 75,
      which: 75,
      ctrlKey: true,
      altKey: false,
      shiftKey: false,
      metaKey: false,
    });

    document.dispatchEvent(event);
  });
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @media (min-width: 601px) {
    #normal-footer {
      display: block;
    }

    #footer-button {
      display: none;
    }
  }

  @media (max-width: 600px) {
    #normal-footer {
      display: none;
    }

    #footer-button {
      background: #fff;
      position: fixed;
      border: 1px solid #eee;
      right: 10px;
      bottom: 10px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
  }

  footer {
    background: #fdfdfd;
    border-top: 1px solid #eee;
    position: fixed;
    bottom: 0px;
    width: 100%;
    padding-block: 8px;
    text-align: center;
    font-size: 0.85rem;

    view-timeline-name: --revealing;
    view-timeline-axis: block;

    animation: linear 0.3s fadeIn;
    animation-timeline: --revealing;
    animation-range: entry 100% cover 10%;
  }
</style>
